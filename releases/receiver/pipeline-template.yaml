parameters:
- name: stages
  type: object
  default: []

stages:
- ${{ each stage in parameters.stages }}:
  - stage: '${{ stage.name }}'
    displayName: '${{ stage.name }} Deployment'
    variables:
      - group: SEC_MS
      - name: apiops_release_version
        value: "v5.1.4"
      - name: API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH
        value: 'APIMConfig'
      - name: RESOURCE_GROUP_NAME
        value: 'z-rg-ingress-dev'
      - name: API_MANAGEMENT_SERVICE_NAME
        value: '$(API_MANAGEMENT_SERVICE_NAME)'
      - name: APIM_LOGGER_NAME
        value: "appinsights-logger"
      - name: CONFIGURATION_YAML_PATH
        value: './APIMConfig/environments/configuration.${{ stage.environmentCode }}.yaml'

    jobs:
    - job: BuildAndPublish
      displayName: 'Build and Publish'
      pool:
        name: Default
      steps:

        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'specific'
            project: '$(System.TeamProject)'
            pipeline: 'Build app receiver'
            runVersion: 'latest'
            artifact: 'receiver-artifacts'
            path: '$(Build.ArtifactStagingDirectory)/receiver-artifacts'

        - task: PowerShell@2
          displayName: Set publishing variables
          inputs:
            targetType: inline
            script: |
              Set-StrictMode -Version Latest
              $ErrorActionPreference = "Stop"
              $VerbosePreference = "Continue"
              $InformationPreference = "Continue"

              az login --service-principal --username "$env:SP_USERNAME" --password "$env:SP_PASSWORD" --tenant "$env:TENANT_ID"

              $azureAccessToken = az account get-access-token --query "accessToken" --output tsv
              Write-Host "##vso[task.setvariable issecret=true;variable=AZURE_BEARER_TOKEN]$azureAccessToken"
              Write-Host "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_ID]$env:SP_USERNAME"
              Write-Host "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_SECRET]$env:SP_PASSWORD"
              Write-Host "##vso[task.setvariable issecret=true;variable=AZURE_TENANT_ID]$env:TENANT_ID"
          env:
            SP_USERNAME: $(ARMCLIENTID)
            SP_PASSWORD: $(ARMCLIENTSECRET)
            TENANT_ID: $(ARMTENANTID)

        - task: PowerShell@2
          displayName: Get Aks Context and publish app
          inputs:
            targetType: "inline"
            workingDirectory: releases/receiver
            script: |
              $umiId = az identity show --name "umi-receiver" --resource-group "z-rg-apps-dev"--query clientId -o tsv

              $imagePath = "$(Build.ArtifactStagingDirectory)/receiver-artifacts/image"
              $image = Get-Content -Path $imagePath -Raw
              $yamlPath = "./deployment.yaml"
              (Get-Content -Path $yamlPath) -replace "UMI_CLIENT_ID", "$umiId" -replace "IMAGE_NAME", "$image" | Set-Content -Path $yamlPath

              type $yamlPath

              $resourceGroup = "${{ stage.AKSRG}}"
              $clusterName = "${{ stage.AKS}}"
              
              Write-Host "Getting AKS credentials for cluster '$clusterName' in resource group '$resourceGroup'..."
              az aks get-credentials --resource-group $resourceGroup --name $clusterName --overwrite-existing

              Write-Host "Applying Kubernetes manifest: app/deployment.yaml"
              kubectl apply -f deployment.yaml